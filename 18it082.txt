import pandas as pd
import numpy as np
from sklearn.svm import SVR
import matplotlib.pyplot as plt

df=pd.read_csv('/content/SUNPHARMA.NS (1).csv')
df.tail()

dates=[]
prices=[]

#get the no. of rows and columns in the data set
df.shape

#print all of the data except for the last row
df=df.head(len(df)-1)
print(df.shape)

df_dates=df.loc[:,'Date'] # get all rows from date column 
df_Adj_close=df.loc[:,'Adj Close']#get all rows of Adj Close

for date in df_dates:
   dates.append([int(date.split('-')[2])])

#create the dependent data set 'y' as prices
for close_price in df_Adj_close:
   prices.append(float(close_price))

print(dates)

#function to make prediction using 3 different kernals
def predict_prices(dates, prices, x): #x is testing date for test model  
    svr_lin=SVR(kernel='linear', C=1e3)
    svr_poly=SVR(kernel='poly', C=1e3,degree=2)
    svr_rbf=SVR(kernel='rbf', C=1e3, gamma=0.1)

    #TRAIN the models on the dates and prices
    svr_lin.fit(dates,prices)
    svr_poly.fit(dates,prices)
    svr_rbf.fit(dates,prices)
   
    #plot the graph 
    plt.scatter(dates,prices,color='blue',label='Data',s=60)
    plt.scatter(dates,svr_rbf.predict(dates),color='black',label='RBF model')
    plt.scatter(dates,svr_lin.predict(dates),color='green',label='Linear Model')
    plt.scatter(dates,svr_poly.predict(dates),color='yellow',label='Polynomial model')
    plt.xlabel('Date')
    plt.ylabel('price')
    plt.title('Support vactor Regression (sun pharma Data)')
    plt.legend()
    plt.show()
    return svr_rbf.predict(x)[0],svr_lin.predict(x)[0],svr_poly.predict(x)[0]

predicted_price = predict_prices(dates,prices,[[31]])
print(predicted_price)
